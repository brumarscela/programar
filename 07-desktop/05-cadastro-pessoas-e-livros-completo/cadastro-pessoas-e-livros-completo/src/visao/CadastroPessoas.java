/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package visao;

import dao.dinamico.DAO;
import java.awt.KeyboardFocusManager;
import java.util.ArrayList;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import modelo.Livro;
import modelo.Pessoa;

/**
 *
 * @author friend
 */
public class CadastroPessoas extends javax.swing.JFrame {

    // instância de acesso aos dados
    DAO dao = new DAO();

    /**
     * Creates new form CadastroPessoas
     */
    public CadastroPessoas() {
        initComponents();
        // centralizar a janela
        this.setLocationRelativeTo(null);
        // carregar lista de livros na lista dropdown
        carregarLivrosNaLista();
        // mostra a primeira pessoa na tela
        mostrarPessoaNaTela(1);

        txtEndereco.setFocusTraversalKeys(KeyboardFocusManager.FORWARD_TRAVERS‌​AL_KEYS, null);
        txtEndereco.setFocusTraversalKeys(KeyboardFocusManager.BACKWARD_TRAVERS‌​AL_KEYS, null);
    }

    public void carregarLivrosNaLista() {
        // limpa itens
        cmbLivros.removeAllItems();
        // preenche os livros
        for (Livro livro : dao.retornarLivros()) {
            cmbLivros.addItem(livro.getTitulo());
        }
    }

    public void mostrarPessoaNaTela(int i) {
        // retornar a pessoa atual
        Pessoa p = dao.retornarPessoaAcessoAbsoluto(i - 1);
        // exibir valores dos campos na tela
        // a lista inicia do zero até n-1, por isso existe (i-1) a seguir
        this.txtNome.setText(p.getNome());
        this.txtTelefone.setText(p.getTelefone());
        this.txtEndereco.setText(p.getEndereco());
        // exibir número do registro atual
        this.txtRegistroAtual.setText(String.valueOf(i));

        // criando uma lista temporária para popular 
        DefaultListModel itens = new DefaultListModel();
        // percorrer os livros da pessoa
        for (Livro liv : p.getLivros()) {
            itens.addElement(liv.getTitulo());
        }
        // configurar a lista para exibir os itens da lista temporária
        lstLivros.setModel(itens);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtEndereco = new javax.swing.JTextArea();
        jLabel4 = new javax.swing.JLabel();
        txtTelefone = new javax.swing.JTextField();
        btPrimeiro = new javax.swing.JButton();
        btAnterior = new javax.swing.JButton();
        btProximo = new javax.swing.JButton();
        btUltimo = new javax.swing.JButton();
        txtRegistroAtual = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        lstLivros = new javax.swing.JList<>();
        jButton5 = new javax.swing.JButton();
        btExcluir = new javax.swing.JButton();
        btAdicionar = new javax.swing.JButton();
        cmbLivros = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        btExcluirLivro = new javax.swing.JButton();
        btAbrirCadastroLivros = new javax.swing.JButton();
        btAdicionarLivro = new javax.swing.JButton();
        btSalvar = new javax.swing.JButton();
        btCancelar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nome:");

        jLabel2.setFont(new java.awt.Font("Cantarell", 1, 24)); // NOI18N
        jLabel2.setText("Cadastro de Pessoas");

        jLabel3.setText("Endereço:");

        txtEndereco.setColumns(20);
        txtEndereco.setRows(5);
        txtEndereco.setNextFocusableComponent(txtTelefone);
        jScrollPane1.setViewportView(txtEndereco);

        jLabel4.setText("Telefone:");

        txtTelefone.setNextFocusableComponent(btPrimeiro);

        btPrimeiro.setText("<<");
        btPrimeiro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btPrimeiroActionPerformed(evt);
            }
        });

        btAnterior.setText("<");
        btAnterior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnteriorActionPerformed(evt);
            }
        });

        btProximo.setText(">");
        btProximo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btProximoActionPerformed(evt);
            }
        });

        btUltimo.setText(">>");
        btUltimo.setNextFocusableComponent(btAdicionar);
        btUltimo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btUltimoActionPerformed(evt);
            }
        });

        txtRegistroAtual.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtRegistroAtualActionPerformed(evt);
            }
        });
        txtRegistroAtual.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                txtRegistroAtualPropertyChange(evt);
            }
        });

        jScrollPane2.setViewportView(lstLivros);

        jButton5.setText("Alterar");
        jButton5.setEnabled(false);

        btExcluir.setText("-");
        btExcluir.setNextFocusableComponent(lstLivros);
        btExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirActionPerformed(evt);
            }
        });

        btAdicionar.setText("+");
        btAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarActionPerformed(evt);
            }
        });

        cmbLivros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLivrosActionPerformed(evt);
            }
        });

        jLabel6.setText("Meus Livros:");

        btExcluirLivro.setText("X");
        btExcluirLivro.setNextFocusableComponent(btAdicionarLivro);
        btExcluirLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btExcluirLivroActionPerformed(evt);
            }
        });

        btAbrirCadastroLivros.setText("...");
        btAbrirCadastroLivros.setNextFocusableComponent(txtNome);
        btAbrirCadastroLivros.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAbrirCadastroLivrosActionPerformed(evt);
            }
        });

        btAdicionarLivro.setText("^");
        btAdicionarLivro.setNextFocusableComponent(cmbLivros);
        btAdicionarLivro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAdicionarLivroActionPerformed(evt);
            }
        });

        btSalvar.setText("Salvar");
        btSalvar.setEnabled(false);
        btSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSalvarActionPerformed(evt);
            }
        });

        btCancelar.setText("Cancelar");
        btCancelar.setEnabled(false);
        btCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel2)
                .addGap(228, 228, 228))
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel1)
                    .addComponent(jLabel4))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(408, 408, 408)
                        .addComponent(btAdicionarLivro, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(165, 165, 165))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, 245, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(203, 203, 203)
                                .addComponent(btUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(cmbLivros, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 290, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btExcluirLivro, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(btAbrirCadastroLivros, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addGap(6, 6, 6))))))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btAdicionar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btPrimeiro, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtRegistroAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btProximo, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btCancelar)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btExcluirLivro)
                        .addGap(45, 45, 45)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btAdicionarLivro)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel4)
                        .addComponent(txtTelefone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(7, 7, 7)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtRegistroAtual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btPrimeiro, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAnterior, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btProximo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btUltimo, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbLivros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btAbrirCadastroLivros))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btAdicionar)
                    .addComponent(jButton5)
                    .addComponent(btExcluir)
                    .addComponent(btSalvar)
                    .addComponent(btCancelar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btProximoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btProximoActionPerformed
        // obtém o número de registro atual
        int atual = Integer.parseInt(txtRegistroAtual.getText());
        // se for possível avançar
        if (atual < dao.retornarQuantidadeDePessoas()) {
            // avança para o próximo registro
            mostrarPessoaNaTela(atual + 1);
        }
    }//GEN-LAST:event_btProximoActionPerformed

    private void btAnteriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnteriorActionPerformed
        // obtém o número de registro atual
        int atual = Integer.parseInt(txtRegistroAtual.getText());
        // se for possível retroceder
        if (atual > 1) {
            // retrocede
            mostrarPessoaNaTela(atual - 1);
        }
    }//GEN-LAST:event_btAnteriorActionPerformed

    private void btPrimeiroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btPrimeiroActionPerformed
        // vai para o primeiro registro
        mostrarPessoaNaTela(1);
    }//GEN-LAST:event_btPrimeiroActionPerformed

    private void btUltimoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btUltimoActionPerformed
        // vai para o último registro
        mostrarPessoaNaTela(dao.retornarQuantidadeDePessoas());

    }//GEN-LAST:event_btUltimoActionPerformed

    private void txtRegistroAtualActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtRegistroAtualActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegistroAtualActionPerformed

    private void txtRegistroAtualPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_txtRegistroAtualPropertyChange
        // TODO add your handling code here:
    }//GEN-LAST:event_txtRegistroAtualPropertyChange

    private void btAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarActionPerformed
        // preparar botões para adicionar pessoa
        prepararBotoesParaAdicionar();
        // limpar campos da tela
        limparCamposDaTela();
        // posicionar cursos no campo nome
        txtNome.requestFocus();

    }//GEN-LAST:event_btAdicionarActionPerformed

    public void limparCamposDaTela() {
        // limpar campos da tela
        txtNome.setText("");
        txtEndereco.setText("");
        txtTelefone.setText("");
        // limpar a lista de livros
        DefaultListModel vazio = new DefaultListModel();
        lstLivros.setModel(vazio);
    }

    public void prepararBotoesParaAdicionar() {
        btPrimeiro.setEnabled(false);
        btAnterior.setEnabled(false);
        btProximo.setEnabled(false);
        btUltimo.setEnabled(false);
        btExcluir.setEnabled(false);
        btAdicionar.setEnabled(false);
        // desabilitar valor do registro atual
        txtRegistroAtual.setEnabled(false);
        // habilitar botões de salvar e cancelar
        btSalvar.setEnabled(true);
        btCancelar.setEnabled(true);
    }

    public void prepararBotoesParaNavegar() {
        btPrimeiro.setEnabled(true);
        btAnterior.setEnabled(true);
        btProximo.setEnabled(true);
        btUltimo.setEnabled(true);
        btExcluir.setEnabled(true);
        btAdicionar.setEnabled(true);
        // desabilitar valor do registro atual
        txtRegistroAtual.setEnabled(true);
        // habilitar botões de salvar e cancelar
        btSalvar.setEnabled(false);
        btCancelar.setEnabled(false);
    }

    private void btSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSalvarActionPerformed
        // obter livros selecionados
        ArrayList<Livro> livros = dao.retornarLivrosPorTitulosViaModel(lstLivros.getModel());
        // cria a nova pessoa
        Pessoa nova = new Pessoa(txtNome.getText(), txtEndereco.getText(), txtTelefone.getText(), livros);
        // adicionar a nova pessoa
        dao.adicionarPessoa(nova);
        // desbloquear tela
        prepararBotoesParaNavegar();
        // mostrar registro o novo registro
        mostrarPessoaNaTela(dao.retornarQuantidadeDePessoas());
    }//GEN-LAST:event_btSalvarActionPerformed

    private void btExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirActionPerformed
        // obtém o número de registro atual
        int atual = Integer.parseInt(txtRegistroAtual.getText());
        // remover pessoa atual, se for possível
        if (dao.retornarQuantidadeDePessoas() > 0) {
            // remover
            dao.removerPessoaNaPosicao(atual);
            // se ainda houver pessoas pra mostrar
            if (dao.retornarQuantidadeDePessoas() > 0) {
                //atualizar tela
                mostrarPessoaNaTela(atual);
            } else {
                // desabilita botão excluir
                btExcluir.setEnabled(false);
                // deixa botões no modo incluir
                prepararBotoesParaAdicionar();
                // limpa campos
                limparCamposDaTela();
            }
        }
    }//GEN-LAST:event_btExcluirActionPerformed

    private void btAdicionarLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAdicionarLivroActionPerformed
        // buscar a pessoa atual
        int atual = Integer.parseInt(txtRegistroAtual.getText());
        Pessoa p = dao.retornarPessoaAcessoAbsoluto(atual-1);
        // buscar o livro selecionado
        Livro l = dao.buscarLivroPorTitulo(cmbLivros.getSelectedItem().toString());
        // verificar se a pessoa já possui o livro
        boolean possui = false;
        for (Livro livro : p.getLivros()) {
            if (livro.getTitulo().equals(l.getTitulo())) {
                possui = true;
                break;
            }
        }
        // se a pessoa não possui o livro
        if (!possui) {
            // adiciona o livro à pessoa e atualiza os dados
            p.getLivros().add(l);
            dao.atualizarPessoa(p);
            //atualiza a tela
            mostrarPessoaNaTela(atual);
        } else {
            JOptionPane.showMessageDialog(null, "A pessoa já possui o livro selecionado!");
        }

    }//GEN-LAST:event_btAdicionarLivroActionPerformed

    private void btExcluirLivroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btExcluirLivroActionPerformed
        // buscar a pessoa atual
        int atual = Integer.parseInt(txtRegistroAtual.getText());
        Pessoa p = dao.retornarPessoaAcessoAbsoluto(atual-1);
        // buscar o livro selecionado
        Livro l = dao.buscarLivroPorTitulo(cmbLivros.getSelectedItem().toString());
        // remover o livro da pessoa e atualiza a fonte de dados
        p.getLivros().remove(l);
        dao.atualizarPessoa(p);
        // atualizar a tela
        mostrarPessoaNaTela(atual);        
    }//GEN-LAST:event_btExcluirLivroActionPerformed

    private void btAbrirCadastroLivrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAbrirCadastroLivrosActionPerformed
        // criar nova instância do cadastro de livros
        CadastroLivros cadli = new CadastroLivros(this, true);
        // associar o DAO do cadastro de livros ao DAO desta janela
        cadli.dao = this.dao;
        // associar combobox para poder atualizar quando fechar a janela modal
        cadli.papai = this;
        // centralizar a janela
        cadli.setLocationRelativeTo(null);
        // tornar a janela visível
        cadli.setVisible(true);        
    }//GEN-LAST:event_btAbrirCadastroLivrosActionPerformed

    private void cmbLivrosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLivrosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbLivrosActionPerformed

    private void btCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btCancelarActionPerformed
        // desbloquear tela
        prepararBotoesParaNavegar();
        // pega posição da pessoa atual
        int atual = Integer.parseInt(txtRegistroAtual.getText());
        // mostrar registro o novo registro
        mostrarPessoaNaTela(atual);
    }//GEN-LAST:event_btCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroPessoas.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroPessoas.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroPessoas.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroPessoas.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroPessoas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAbrirCadastroLivros;
    private javax.swing.JButton btAdicionar;
    private javax.swing.JButton btAdicionarLivro;
    private javax.swing.JButton btAnterior;
    private javax.swing.JButton btCancelar;
    private javax.swing.JButton btExcluir;
    private javax.swing.JButton btExcluirLivro;
    private javax.swing.JButton btPrimeiro;
    private javax.swing.JButton btProximo;
    private javax.swing.JButton btSalvar;
    private javax.swing.JButton btUltimo;
    private javax.swing.JComboBox<String> cmbLivros;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JList<String> lstLivros;
    private javax.swing.JTextArea txtEndereco;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtRegistroAtual;
    private javax.swing.JTextField txtTelefone;
    // End of variables declaration//GEN-END:variables
}
